/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var cov_swejivhu5 = function () {var path = '/Users/ndelvalle/Projects/v-blur/lib/v-blur.js',hash = '55afeae048519da6091231d9afd2275b01e27182',global = new Function('return this')(),gcv = '__coverage__',coverageData = { path: '/Users/ndelvalle/Projects/v-blur/lib/v-blur.js', statementMap: { '0': { start: { line: 1, column: 18 }, end: { line: 1, column: 20 } }, '1': { start: { line: 3, column: 0 }, end: { line: 22, column: 1 } }, '2': { start: { line: 4, column: 2 }, end: { line: 9, column: 3 } }, '3': { start: { line: 5, column: 4 }, end: { line: 8, column: 5 } }, '4': { start: { line: 11, column: 2 }, end: { line: 13, column: 3 } }, '5': { start: { line: 12, column: 4 }, end: { line: 12, column: 46 } }, '6': { start: { line: 15, column: 18 }, end: { line: 15, column: 45 } }, '7': { start: { line: 16, column: 17 }, end: { line: 16, column: 53 } }, '8': { start: { line: 17, column: 21 }, end: { line: 17, column: 64 } }, '9': { start: { line: 19, column: 2 }, end: { line: 19, column: 57 } }, '10': { start: { line: 20, column: 2 }, end: { line: 20, column: 60 } }, '11': { start: { line: 21, column: 2 }, end: { line: 21, column: 34 } }, '12': { start: { line: 24, column: 0 }, end: { line: 26, column: 1 } }, '13': { start: { line: 25, column: 2 }, end: { line: 25, column: 35 } }, '14': { start: { line: 28, column: 0 }, end: { line: 31, column: 1 } }, '15': { start: { line: 29, column: 2 }, end: { line: 29, column: 52 } }, '16': { start: { line: 29, column: 44 }, end: { line: 29, column: 50 } }, '17': { start: { line: 30, column: 2 }, end: { line: 30, column: 35 } } }, fnMap: { '0': { name: '(anonymous_0)', decl: { start: { line: 3, column: 17 }, end: { line: 3, column: 18 } }, loc: { start: { line: 3, column: 45 }, end: { line: 22, column: 1 } }, line: 3 }, '1': { name: '(anonymous_1)', decl: { start: { line: 24, column: 17 }, end: { line: 24, column: 18 } }, loc: { start: { line: 24, column: 40 }, end: { line: 26, column: 1 } }, line: 24 }, '2': { name: '(anonymous_2)', decl: { start: { line: 28, column: 19 }, end: { line: 28, column: 20 } }, loc: { start: { line: 28, column: 42 }, end: { line: 31, column: 1 } }, line: 28 } }, branchMap: { '0': { loc: { start: { line: 4, column: 2 }, end: { line: 9, column: 3 } }, type: 'if', locations: [{ start: { line: 4, column: 2 }, end: { line: 9, column: 3 } }, { start: { line: 4, column: 2 }, end: { line: 9, column: 3 } }], line: 4 }, '1': { loc: { start: { line: 4, column: 6 }, end: { line: 4, column: 75 } }, type: 'binary-expr', locations: [{ start: { line: 4, column: 6 }, end: { line: 4, column: 39 } }, { start: { line: 4, column: 43 }, end: { line: 4, column: 75 } }], line: 4 }, '2': { loc: { start: { line: 11, column: 2 }, end: { line: 13, column: 3 } }, type: 'if', locations: [{ start: { line: 11, column: 2 }, end: { line: 13, column: 3 } }, { start: { line: 11, column: 2 }, end: { line: 13, column: 3 } }], line: 11 }, '3': { loc: { start: { line: 15, column: 18 }, end: { line: 15, column: 45 } }, type: 'binary-expr', locations: [{ start: { line: 15, column: 18 }, end: { line: 15, column: 38 } }, { start: { line: 15, column: 42 }, end: { line: 15, column: 45 } }], line: 15 }, '4': { loc: { start: { line: 16, column: 17 }, end: { line: 16, column: 53 } }, type: 'binary-expr', locations: [{ start: { line: 16, column: 17 }, end: { line: 16, column: 36 } }, { start: { line: 16, column: 40 }, end: { line: 16, column: 53 } }], line: 16 }, '5': { loc: { start: { line: 17, column: 21 }, end: { line: 17, column: 64 } }, type: 'binary-expr', locations: [{ start: { line: 17, column: 21 }, end: { line: 17, column: 44 } }, { start: { line: 17, column: 48 }, end: { line: 17, column: 64 } }], line: 17 }, '6': { loc: { start: { line: 19, column: 21 }, end: { line: 19, column: 57 } }, type: 'cond-expr', locations: [{ start: { line: 19, column: 46 }, end: { line: 19, column: 53 } }, { start: { line: 19, column: 56 }, end: { line: 19, column: 57 } }], line: 19 }, '7': { loc: { start: { line: 20, column: 20 }, end: { line: 20, column: 60 } }, type: 'cond-expr', locations: [{ start: { line: 20, column: 45 }, end: { line: 20, column: 51 } }, { start: { line: 20, column: 54 }, end: { line: 20, column: 60 } }], line: 20 }, '8': { loc: { start: { line: 29, column: 2 }, end: { line: 29, column: 52 } }, type: 'if', locations: [{ start: { line: 29, column: 2 }, end: { line: 29, column: 52 } }, { start: { line: 29, column: 2 }, end: { line: 29, column: 52 } }], line: 29 } }, s: { '0': 0, '1': 0, '2': 0, '3': 0, '4': 0, '5': 0, '6': 0, '7': 0, '8': 0, '9': 0, '10': 0, '11': 0, '12': 0, '13': 0, '14': 0, '15': 0, '16': 0, '17': 0 }, f: { '0': 0, '1': 0, '2': 0 }, b: { '0': [0, 0], '1': [0, 0], '2': [0, 0], '3': [0, 0], '4': [0, 0], '5': [0, 0], '6': [0, 0], '7': [0, 0], '8': [0, 0] }, _coverageSchema: '332fd63041d2c1bcb487cc26dd0d5f7d97098a6c' },coverage = global[gcv] || (global[gcv] = {});if (coverage[path] && coverage[path].hash === hash) {return coverage[path];}coverageData.hash = hash;return coverage[path] = coverageData;}();var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {return typeof obj;} : function (obj) {return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;};var directive = /* istanbul ignore next */(++cov_swejivhu5.s[0], {}); /* istanbul ignore next */++cov_swejivhu5.s[1];

directive.blur = function (el, bindingValue) {/* istanbul ignore next */++cov_swejivhu5.f[0];++cov_swejivhu5.s[2];
  if ( /* istanbul ignore next */(++cov_swejivhu5.b[1][0], typeof bindingValue !== 'boolean') && /* istanbul ignore next */(++cov_swejivhu5.b[1][1], /* istanbul ignore next */(typeof bindingValue === 'undefined' ? 'undefined' : _typeof(bindingValue)) !== 'object')) {/* istanbul ignore next */++cov_swejivhu5.b[0][0];++cov_swejivhu5.s[3];
    throw new Error(
    'Expected directive binding value type to be a boolean or an object but found ' + /* istanbul ignore next */('a ' + (typeof
    bindingValue === 'undefined' ? 'undefined' : _typeof(bindingValue)) + ' instead'));

  } else /* istanbul ignore next */{++cov_swejivhu5.b[0][1];}++cov_swejivhu5.s[4];

  if (typeof bindingValue === 'boolean') {/* istanbul ignore next */++cov_swejivhu5.b[2][0];++cov_swejivhu5.s[5];
    bindingValue = { isBlurred: bindingValue };
  } else /* istanbul ignore next */{++cov_swejivhu5.b[2][1];}

  var opacity = /* istanbul ignore next */(++cov_swejivhu5.s[6], /* istanbul ignore next */(++cov_swejivhu5.b[3][0], bindingValue.opacity) || /* istanbul ignore next */(++cov_swejivhu5.b[3][1], 0.5));
  var filter = /* istanbul ignore next */(++cov_swejivhu5.s[7], /* istanbul ignore next */(++cov_swejivhu5.b[4][0], bindingValue.filter) || /* istanbul ignore next */(++cov_swejivhu5.b[4][1], 'blur(1.5px)'));
  var transition = /* istanbul ignore next */(++cov_swejivhu5.s[8], /* istanbul ignore next */(++cov_swejivhu5.b[5][0], bindingValue.transition) || /* istanbul ignore next */(++cov_swejivhu5.b[5][1], 'all .2s linear')); /* istanbul ignore next */++cov_swejivhu5.s[9];

  el.style.opacity = bindingValue.isBlurred ? /* istanbul ignore next */(++cov_swejivhu5.b[6][0], opacity) : /* istanbul ignore next */(++cov_swejivhu5.b[6][1], 1); /* istanbul ignore next */++cov_swejivhu5.s[10];
  el.style.filter = bindingValue.isBlurred ? /* istanbul ignore next */(++cov_swejivhu5.b[7][0], filter) : /* istanbul ignore next */(++cov_swejivhu5.b[7][1], 'none'); /* istanbul ignore next */++cov_swejivhu5.s[11];
  el.style.transition = transition;
}; /* istanbul ignore next */++cov_swejivhu5.s[12];

directive.bind = function (el, binding) {/* istanbul ignore next */++cov_swejivhu5.f[1];++cov_swejivhu5.s[13];
  directive.blur(el, binding.value);
}; /* istanbul ignore next */++cov_swejivhu5.s[14];

directive.update = function (el, binding) {/* istanbul ignore next */++cov_swejivhu5.f[2];++cov_swejivhu5.s[15];
  if (binding.value === binding.oldValue) {/* istanbul ignore next */++cov_swejivhu5.b[8][0];++cov_swejivhu5.s[16];return;} else /* istanbul ignore next */{++cov_swejivhu5.b[8][1];}++cov_swejivhu5.s[17];
  directive.blur(el, binding.value);
}; /* istanbul ignore next */exports.default =

directive;